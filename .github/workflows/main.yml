name: Deploy to EC2
on:
  push:
    branches:
      - dev
  workflow_dispatch:
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build with Maven
        run: |
          mkdir -p ~/.ssh
          mvn clean package -DskipTests
      - name: Add EC2 to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.SSH_KEY }}
        run: |
          echo "${PRIVATE_KEY}" > private_key.pem
          chmod 600 private_key.pem
          # SCP the JAR file to EC2
          scp -o StrictHostKeyChecking=no -i private_key.pem target/customer-0.0.1-SNAPSHOT.jar matcha@${{ secrets.SSH_HOST }}:~
          # SSH to EC2 and run deployment commands
          ssh -o StrictHostKeyChecking=no -i private_key.pem matcha@${{ secrets.SSH_HOST }} << 'EOF'
            set -x  # Enable debug mode
            echo "Current directory: $(pwd)"
            echo "List of files:"
            ls -la
            PORT=8080
            PID=$(lsof -ti:$PORT)
            if [ -n "$PID" ]; then
              echo "Killing process on port $PORT"
              kill -9 $PID
            else
              echo "No process found on port $PORT"
            fi
            echo "Removing old log file"
            rm -f app.log
            echo "Starting application"
            nohup java -jar customer-0.0.1-SNAPSHOT.jar > app.log 2>&1 &
            echo "Application started, PID: $!"
            sleep 10  # Wait for the application to start
            echo "Application log:"
            tail -n 20 app.log
            echo "Process status:"
            ps aux | grep java
          EOF